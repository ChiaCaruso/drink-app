import { useState, useEffect } from 'react'
import Head from 'next/head'
import Link from 'next/link'
import { FaSearch } from 'react-icons/fa'

import { globalContext } from '../Tools/context'

import styles from './index.module.scss'

import Layout from '../Components/Layout'
import Hero from '../Components/Hero'
import Drinks from '../Components/Drinks'
import ErrorMessage from '../Components/ErrorMessage'
import Loading from '../Components/Loading'

export default function Home() {

  const { isLoading, isError, data, query, handleSearch, deleteScrollPosition, scrollPosition } = globalContext();
  const [authorInput, setAuthorInput] = useState(query);

  const handleSubmit = (e) => {
    e.preventDefault();
    handleSearch(authorInput);
  };

  useEffect(() => {
    if (scrollPosition) {
      window.scrollTo(0, scrollPosition);
      deleteScrollPosition();
    }
  }, [scrollPosition])

  return (
    <Layout>
      <div className={styles.container}>
        <Head>
          <title>Create Next App</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <Hero showOverlay>
          <div className={styles.hero}>
            <div className={styles.hero_text}>
              <h1>DRINK APP</h1>
              <h4>Tutti i cocktail del mondo a portata di click</h4>
              <p>Drink App ti permette di cercare le ricette dei cocktails più famosi al mondo!</p>
              <Link href="/about">
                <button className={styles.btn}>Scopri di più</button>
              </Link>
            </div>
          </div>
        </Hero>
        <section className={styles.section}>
          <div className={styles.searchBar}>
            <div className={styles.search}>
              <form onClick={handleSubmit}>
                <h4>Cerca il tuo cocktail</h4>
                <div className={styles.search_input}>
                  <input
                    id="drink"
                    value={authorInput}
                    placeholder={query}
                    onChange={(e) => setAuthorInput(e.target.value)}
                  />
                  <button type='submit' className={styles.icon_btn}>
                    <FaSearch />
                  </button>
                </div>
              </form>
            </div>
          </div>
          {!isLoading && isError ? (
            <ErrorMessage text={"Nessun cocktail trovato"} />
          ) : !isLoading && !isError ? (
            <Drinks drink={data.drinks} />
          ) : (
            <Loading />
          )}
        </section>
      </div>
    </Layout>
  )
}
